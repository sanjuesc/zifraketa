/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package segurtasuna;

import java.util.HashSet;
import java.util.Random;

public class OrdezkatzeHiztegia {

    public String alfabetoa="ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    public String gakoa="ZXCVBNMASDFGHJKLQWERTYUIOP";
    public OrdezkatzeHiztegia(){

    }


    public static void main(String[] args) {

    }


    public void generatuGakoa(){        //Zorizko gako bat sortzen du 26 ziklotan
        String gakoRandom="";
        Random random = new Random();
        char unekoChar;
        String alfabetoKopia= alfabetoa;
        int lenght = alfabetoKopia.length();
        //Âºint zikloKop=0;
        while(lenght>gakoRandom.length()){
            StringBuilder sb = new StringBuilder(alfabetoKopia);
            int unekoa = random.nextInt(alfabetoKopia.length());
            unekoChar=alfabetoKopia.charAt(unekoa);
            gakoRandom+=unekoChar;
            sb.deleteCharAt(unekoa);
            alfabetoKopia=sb.toString();
           // zikloKop++;
        }
        this.gakoa=gakoRandom;
    }
    public String zifratu(String mezua){        //mezuko karaktere bakoitzaren kokapena lortzen dugu alfabetoan
        String emaitza="";                      //eta kokapen bera, baina gakoan, duen karaktereaz ordezkatzen dugu
        for(int i=0;i<mezua.length();i++){
            if(this.alfabetoa.contains(""+mezua.charAt(i))){
                emaitza+=this.gakoa.charAt(this.alfabetoa.indexOf(mezua.charAt(i)));
            }else{
                emaitza+=mezua.charAt(i);
            }
        }
        return emaitza;
    }
    public String deszifratu(String kripto){    //zifratu metodoaren berdina, baina gako -> alfabeto
        String emaitza="";
        for(int i=0;i<kripto.length();i++){
            if(this.gakoa.contains(""+kripto.charAt(i))){
                emaitza+=alfabetoa.charAt(this.gakoa.indexOf(kripto.charAt(i)));
            }else{
                emaitza+=kripto.charAt(i);
            }
        }
        return emaitza;
    }

    public String hitzetikGakora(String hitza){     //Metodo honek hitz bat hartzen du eta gako bat sortzen du
        hitza = hitza.toUpperCase();                //non hitz hori gakoaren hasieran dagoen eta ondoren alfabetoko
        HashSet<Character> badago = new HashSet<>();//beste letra guztiak, letrak errepikatu gabe
        String gakoBerria = "";
        for(int i = 0; i<hitza.length(); i++){      //lehenengo hitzaren karactere "unico" bakoitza gehitzen dugu gakora
            if(!badago.contains(hitza.charAt(i))){
                gakoBerria+=hitza.charAt(i);
                badago.add(hitza.charAt(i));
            }
        }
        for(int j=0; j<alfabetoa.length();j++){     //eta ondoren alfabetoko beste karaktereak
            if(!badago.contains(alfabetoa.charAt(j))){
                gakoBerria+=alfabetoa.charAt(j);
                badago.add(alfabetoa.charAt(j));
            }
        }
        return gakoBerria;
    }



}
